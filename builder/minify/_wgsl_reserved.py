
_WGSL_RESERVED = {
    "_",
    "a",
    "abs",
    "abstract",
    "acos",
    "acosh",
    "active",
    "alignas",
    "alignof",
    "all",
    "any",
    "AppendStructuredBuffer",
    "array",
    "arrayLength",
    "as",
    "asin",
    "asinh",
    "asm",
    "asm_fragment",
    "async",
    "atan",
    "atan2",
    "atanh",
    "atomic",
    "atomic_uint",
    "atomicAdd",
    "atomicAnd",
    "atomicCompareExchangeWeak",
    "atomicCompSwap",
    "atomicCounter",
    "atomicCounterDecrement",
    "atomicCounterIncrement",
    "atomicExchange",
    "atomicLoad",
    "atomicMax",
    "atomicMin",
    "atomicOr",
    "atomicStore",
    "atomicSub",
    "atomicXor",
    "attribute",
    "auto",
    "await",
    "b",
    "barrier",
    "become",
    "bf16",
    "binding",
    "bitcast",
    "bitCount",
    "bitfieldExtract",
    "bitfieldInsert",
    "bitfieldReverse",
    "BlendState",
    "bool",
    "break",
    "Buffer",
    "buffer",
    "bvec2",
    "bvec3",
    "bvec4",
    "ByteAddressBuffer",
    "case",
    "cast",
    "catch",
    "cbuffer",
    "ccw",
    "ceil",
    "centroid",
    "char",
    "clamp",
    "class",
    "co_await",
    "co_return",
    "co_yield",
    "coherent",
    "column_major",
    "common",
    "compile",
    "compile_fragment",
    "CompileShader",
    "ComputeShader",
    "concept",
    "const",
    "const_cast",
    "consteval",
    "constexpr",
    "constinit",
    "constructor",
    "ConsumeStructuredBuffer",
    "continue",
    "continuing",
    "cos",
    "cosh",
    "countLeadingZeros",
    "countOneBits",
    "countTrailingZeros",
    "crate",
    "cross",
    "cw",
    "debugger",
    "decltype",
    "default",
    "degrees",
    "delete",
    "demote",
    "demote_to_helper",
    "depth",
    "depth_any",
    "depth_greater",
    "depth_less",
    "depth_unchanged",
    "DepthStencilState",
    "DepthStencilView",
    "derivative",
    "determinant",
    "dFdx",
    "dFdxCoarse",
    "dFdxFine",
    "dFdy",
    "dFdyCoarse",
    "dFdyFine",
    "discard",
    "distance",
    "dmat2",
    "dmat2x2",
    "dmat2x3",
    "dmat2x4",
    "dmat3",
    "dmat3x2",
    "dmat3x3",
    "dmat3x4",
    "dmat4",
    "dmat4x2",
    "dmat4x3",
    "dmat4x4",
    "do",
    "DomainShader",
    "dot",
    "dot4I8Packed",
    "dot4U8Packed",
    "double",
    "dpdx",
    "dpdxCoarse",
    "dpdxFine",
    "dpdy",
    "dpdyCoarse",
    "dpdyFine",
    "dvec2",
    "dvec3",
    "dvec4",
    "dword",
    "dynamic_cast",
    "early_fragment_tests",
    "else",
    "EmitStreamVertex",
    "EmitVertex",
    "enable",
    "EndPrimitive",
    "EndStreamPrimitive",
    "enum",
    "equal",
    "equal_spacing",
    "exp",
    "exp2",
    "explicit",
    "export",
    "extends",
    "extern",
    "external",
    "f16",
    "f32",
    "f64",
    "faceForward",
    "faceforward",
    "facing",
    "fallthrough",
    "false"
    "false",
    "filter",
    "final",
    "finally",
    "findLSB",
    "findMSB",
    "firstTrailingBit",
    "fixed",
    "flat",
    "float",
    "floatBitsToInt",
    "floatBitsToUint",
    "floor",
    "fma",
    "fn",
    "for",
    "fract",
    "fractional_even_spacing",
    "fractional_odd_spacing",
    "frexp",
    "friend",
    "from",
    "ftransform",
    "function",
    "fvec2",
    "fvec3",
    "fvec4",
    "fwidth",
    "fwidthCoarse",
    "fwidthFine",
    "fxgroup",
    "g",
    "GeometryShader",
    "get",
    "goto",
    "greaterThan",
    "greaterThanEqual",
    "groupMemoryBarrier",
    "groupshared",
    "half",
    "handle",
    "highp",
    "Hullshader",
    "hvec2",
    "hvec3",
    "hvec4",
    "i16",
    "i32",
    "i64",
    "i8",
    "id",
    "if",
    "iimage1D",
    "iimage1DArray",
    "iimage2D",
    "iimage2DArray",
    "iimage2DMS",
    "iimage2DMSArray",
    "iimage2DRect",
    "iimage3D",
    "iimageBuffer",
    "iimageCube",
    "iimageCubeArray",
    "image1D",
    "image1DArray",
    "image1DArrayShadow",
    "image1DShadow",
    "image2D",
    "image2DArray",
    "image2DArrayShadow",
    "image2DMS",
    "image2DMSArray",
    "image2DRect",
    "image2DShadow",
    "image3D",
    "imageAtomicAdd",
    "imageAtomicAnd",
    "imageAtomicCompSwap",
    "imageAtomicExchange",
    "imageAtomicMax",
    "imageAtomicMin",
    "imageAtomicOr",
    "imageAtomicXor",
    "imageBuffer",
    "imageCube",
    "imageCubeArray",
    "imageLoad",
    "imageSamples",
    "imageSize",
    "imageStore",
    "impl",
    "implements",
    "import",
    "imulExtended",
    "in",
    "index",
    "inline",
    "inout",
    "input",
    "InputPatch",
    "insertBits",
    "instanceof",
    "int",
    "intBitsToFloat",
    "interface",
    "interpolateAtCentroid",
    "interpolateAtOffset",
    "interpolateAtSample",
    "invariant",
    "inverse",
    "inverseSqrt",
    "inversesqrt",
    "invocations",
    "isampler1D",
    "isampler1DArray",
    "isampler2D",
    "isampler2DArray",
    "isampler2DMS",
    "isampler2DMSArray",
    "isampler2DRect",
    "isampler3D",
    "isamplerBuffer",
    "isamplerCube",
    "isamplerCubeArray",
    "isinf",
    "isnan",
    "isolines",
    "isubpassInput",
    "isubpassInputMS",
    "itexture1D",
    "itexture1DArray",
    "itexture2D",
    "itexture2DArray",
    "itexture2DMS",
    "itexture2DMSArray",
    "itexture2DRect",
    "itexture3D",
    "itextureBuffer",
    "itextureCube",
    "itextureCubeArray",
    "ivec2",
    "ivec3",
    "ivec4",
    "layout",
    "ldexp",
    "length",
    "lessThan",
    "lessThanEqual",
    "let",
    "line",
    "line_strip",
    "lineadj",
    "linear",
    "lines",
    "lines_adjacency",
    "LineStream",
    "local_size_x",
    "local_size_y",
    "local_size_z",
    "location",
    "log",
    "log2",
    "logical",
    "long",
    "loop",
    "lowp",
    "macro",
    "macro_rules",
    "main",
    "mask",
    "mat",
    "mat2",
    "mat2x2",
    "mat2x3",
    "mat2x4",
    "mat3",
    "mat3x2",
    "mat3x3",
    "mat3x4",
    "mat4",
    "mat4x2",
    "mat4x3",
    "mat4x4",
    "match",
    "matrix",
    "matrixCompMult",
    "max",
    "max_vertices",
    "mediump",
    "memoryBarrier",
    "memoryBarrierAtomicCounter",
    "memoryBarrierBuffer",
    "memoryBarrierImage",
    "memoryBarrierShared",
    "meta",
    "min",
    "mix",
    "mod",
    "modf",
    "module",
    "move",
    "mut",
    "mutable",
    "namespace",
    "new",
    "nil",
    "noexcept",
    "noinline",
    "nointerpolation",
    "noise",
    "noise1",
    "noise2",
    "noise3",
    "noise4",
    "noperspective",
    "normalize",
    "not",
    "notEqual",
    "NULL",
    "null",
    "nullptr",
    "numeric",
    "of",
    "offset",
    "operator",
    "origin_upper_left",
    "out",
    "outerProduct",
    "output",
    "OutputPatch",
    "override",
    "pack",
    "pack2x16float",
    "pack2x16snorm",
    "pack2x16unorm",
    "pack4x8snorm",
    "pack4x8unorm",
    "pack4xI8",
    "pack4xI8Clamp",
    "pack4xU8",
    "pack4xU8Clamp",
    "package",
    "packDouble2x32",
    "packed",
    "packHalf2x16",
    "packoffset",
    "packSnorm2x16",
    "packSnorm4x8",
    "packUnorm",
    "packUnorm2x16",
    "packUnorm4x8",
    "partition",
    "pass",
    "patch",
    "pixel_center_integer",
    "pixelfragment",
    "PixelShader",
    "point",
    "point_mode",
    "points",
    "PointStream",
    "position",
    "pow",
    "precise",
    "precision",
    "premerge",
    "priv",
    "private",
    "protected",
    "ptr",
    "pub",
    "public",
    "quads",
    "quantizeToF16",
    "r",
    "r11f_g11f_b10f",
    "r16",
    "r16_snorm",
    "r16f",
    "r16i",
    "r16ui",
    "r32f",
    "r32i",
    "r32ui",
    "r8",
    "r8_snorm",
    "r8i",
    "r8ui",
    "radians",
    "RasterizerState",
    "RayDesc",
    "rayQueryGetCommittedIntersection",
    "rayQueryInitialize",
    "rayQueryProceed",
    "read_write",
    "readonly",
    "ref",
    "reflect",
    "refract",
    "regardless",
    "register",
    "reinterp",
    "reinterpret_cast",
    "RenderTargetView",
    "requires",
    "resource",
    "restrict",
    "return",
    "reverseBits",
    "rg16",
    "rg16_snorm",
    "rg16f",
    "rg16i",
    "rg16ui",
    "rg32f",
    "rg32i",
    "rg32ui",
    "rg8",
    "rg8_snorm",
    "rg8i",
    "rg8ui",
    "rgb10_a2",
    "rgb10_a2ui",
    "rgba16",
    "rgba16_snorm",
    "rgba16f",
    "rgba16i",
    "rgba16ui",
    "rgba32f",
    "rgba32i",
    "rgba32ui",
    "rgba8",
    "rgba8_snorm",
    "rgba8i",
    "rgba8ui",
    "round",
    "roundEven",
    "row_major",
    "RWBuffer",
    "RWByteAddressBuffer",
    "RWStructuredBuffer",
    "RWTexture1D",
    "RWTexture1DArray",
    "RWTexture2D",
    "RWTexture2DArray",
    "RWTexture3D",
    "samper",
    "sample",
    "sampler",
    "sampler1D",
    "sampler1DArray",
    "sampler1DArrayShadow",
    "sampler1DShadow",
    "sampler2D",
    "sampler2DArray",
    "sampler2DArrayShadow",
    "sampler2DMS",
    "sampler2DMSArray",
    "sampler2DRect",
    "sampler2DRectShadow",
    "sampler2DShadow",
    "sampler3D",
    "sampler3DRect",
    "sampler_comparison",
    "samplerBuffer",
    "SamplerComparisonState",
    "samplerCube",
    "samplerCubeArray",
    "samplerCubeArrayShadow",
    "samplerCubeShadow",
    "samplerShadow",
    "SamplerState",
    "select",
    "Self",
    "self",
    "set",
    "shadow1D",
    "shadow1DLod",
    "shadow1DProj",
    "shadow1DProjLod",
    "shadow2D",
    "shadow2DLod",
    "shadow2DProj",
    "shadow2DProjLod",
    "shared",
    "short",
    "sign",
    "signed",
    "sin",
    "sinh",
    "sizeof",
    "smooth",
    "smoothstep",
    "snorm",
    "sqrt",
    "stateblock",
    "stateblock_state",
    "static",
    "static_assert",
    "static_cast",
    "std",
    "std140",
    "std430",
    "step",
    "storage",
    "storageBarrier",
    "stream",
    "string",
    "struct",
    "StructuredBuffer",
    "structures",
    "subpassInput",
    "subpassInputMS",
    "subroutine",
    "super",
    "superp",
    "switch",
    "sync",
    "tan",
    "tanh",
    "target",
    "tbuffer",
    "technique",
    "technique10",
    "technique11",
    "template",
    "texelFetch",
    "texelFetchOffset",
    "texture",
    "Texture1D",
    "texture1D",
    "Texture1DArray",
    "texture1DArray",
    "texture1DLod",
    "texture1DProj",
    "texture1DProjLod",
    "Texture2D",
    "texture2D",
    "Texture2DArray",
    "texture2DArray",
    "texture2DLod",
    "Texture2DMS",
    "texture2DMS",
    "Texture2DMSArray",
    "texture2DMSArray",
    "texture2DProj",
    "texture2DProjLod",
    "texture2DRect",
    "Texture3D",
    "texture3D",
    "texture3DLod",
    "texture3DProj",
    "texture3DProjLod",
    "texture_1d",
    "texture_2d",
    "texture_2d_array",
    "texture_3d",
    "texture_cube",
    "texture_cube_array",
    "texture_depth_2d",
    "texture_depth_2d_array",
    "texture_depth_cube",
    "texture_depth_cube_array",
    "texture_depth_multisampled_2d",
    "texture_multisampled_2d",
    "texture_storage_1d",
    "texture_storage_2d",
    "texture_storage_2d_array",
    "texture_storage_3d",
    "textureBarrier",
    "textureBuffer",
    "TextureCube",
    "textureCube",
    "TextureCubeArray",
    "textureCubeArray",
    "textureCubeLod",
    "textureDimensions",
    "textureGather",
    "textureGatherCompare",
    "textureGatherOffset",
    "textureGatherOffsets",
    "textureGrad",
    "textureGradOffset",
    "textureLoad",
    "textureLod",
    "textureLodOffset",
    "textureNumLayers",
    "textureNumLevels",
    "textureNumSamples",
    "textureOffset",
    "textureProj",
    "textureProjGrad",
    "textureProjGradOffset",
    "textureProjLod",
    "textureProjLodOffset",
    "textureProjOffset",
    "textureQueryLevels",
    "textureQueryLod",
    "textureSample",
    "textureSampleBaseClampToEdge",
    "textureSampleBias",
    "textureSampleCompare",
    "textureSampleCompareLevel",
    "textureSampleGrad",
    "textureSampleLevel",
    "textureSamples",
    "textureSize",
    "textureStore",
    "this",
    "thread_local",
    "throw",
    "trait",
    "transpose",
    "triangle",
    "triangle_strip",
    "triangleadj",
    "triangles",
    "triangles_adjacency",
    "TriangleStream",
    "true",
    "trunc",
    "try",
    "type",
    "typedef",
    "typeid",
    "typename",
    "typeof",
    "u16",
    "u32",
    "u64",
    "u8",
    "uaddCarry",
    "uimage1D",
    "uimage1DArray",
    "uimage2D",
    "uimage2DArray",
    "uimage2DMS",
    "uimage2DMSArray",
    "uimage2DRect",
    "uimage3D",
    "uimageBuffer",
    "uimageCube",
    "uimageCubeArray",
    "uint",
    "uintBitsToFloat",
    "umulExtended",
    "uniform",
    "union",
    "unless",
    "unorm",
    "unpack",
    "unpack2x16float",
    "unpack2x16snorm",
    "unpack2x16unorm",
    "unpack4x8snorm",
    "unpack4x8unorm",
    "unpack4xI8",
    "unpack4xU8",
    "unpackDouble2x32",
    "unpackHalf2x16",
    "unpackSnorm2x16",
    "unpackSnorm4x8",
    "unpackUnorm",
    "unpackUnorm2x16",
    "unpackUnorm4x8",
    "unsafe",
    "unsigned",
    "unsized",
    "usampler1D",
    "usampler1DArray",
    "usampler2D",
    "usampler2DArray",
    "usampler2DMS",
    "usampler2DMSArray",
    "usampler2DRect",
    "usampler3D",
    "usamplerBuffer",
    "usamplerCube",
    "usamplerCubeArray",
    "use",
    "using",
    "usubBorrow",
    "usubpassInput",
    "usubpassInputMS",
    "utexture1D",
    "utexture1DArray",
    "utexture2D",
    "utexture2DArray",
    "utexture2DMS",
    "utexture2DMSArray",
    "utexture2DRect",
    "utexture3D",
    "utextureBuffer",
    "utextureCube",
    "utextureCubeArray",
    "uvec2",
    "uvec3",
    "uvec4",
    "value",
    "var",
    "varying",
    "vec",
    "vec2",
    "vec3",
    "vec4",
    "vector",
    "vertexfragment",
    "VertexShader",
    "vertices",
    "virtual",
    "void",
    "volatile",
    "w",
    "wchar_t",
    "wgsl",
    "where",
    "while",
    "with",
    "workgroup",
    "workgroupBarrier",
    "workgroupUniformLoad",
    "writeonly",
    "x",
    "y",
    "yield",
    "z",
}

from itertools import product

_WGSL_RESERVED.update({
    "".join(x)
    for n in range(2, 5)
    for x in product("xyzwrgba", repeat=n)
})

_WGSL_RESERVED.update({
    "vec{0}{1}".format(x, y)
    for x in range(2, 5)
    for y in "fuibdh"
})

_WGSL_RESERVED.update({
    "mat{0}x{1}{2}".format(x, y, z)
    for x in range(2, 5)
    for y in range(2, 5)
    for z in "fuibdh"
})
