import{AsyncBarrier as e,loadCommonShaderSource as t,loadF32Lines as E}from"../../util.js";import{createShader as r,createGraphicsProgram as n,getUniformLocation as R,deleteShaders as i}from"../../webgl_util.js";function loadShaderSource(e){return fetch("./shaders/compiled/"+e).then(e=>e.text())}let _LOAD_BVH1=WebAssembly.instantiateStreaming(fetch("/res/bvh_v1.wasm")).then(e=>e.instance.exports),_LOAD_SIMPLE_LINES=E("/res/lines_simple0.f32"),_LOAD_MODERATE_LINES=E("/res/lines_moderate0.f32"),_LOAD_COMPLEX_LINES=E("/res/lines.f32");async function asyncBuildBVH(e,t){let E=await e,r=await t,n=r.length/4;if(!E.allocateLines(n)){var R=`Failed to allocate lines (num: ${n}).`;throw console.log(R),alert(R),Error(R)}new Float32Array(E.memory.buffer,E.getLinesBuffer(),r.length).set(r);let i=E.buildBvh(n);if(!i){var R="Failed to build BVH!";throw console.log(R),alert(R),Error(R)}let a=12*i,T=new Float32Array(E.memory.buffer,E.getBvhBuffer(),a),u=new Float32Array(a);return u.set(T),u}let _RESOURCES=new e().enqueue(_LOAD_SIMPLE_LINES,"SIMPLE_LINES").enqueue(_LOAD_MODERATE_LINES,"MODERATE_LINES").enqueue(_LOAD_COMPLEX_LINES,"COMPLEX_LINES").enqueue(asyncBuildBVH(_LOAD_BVH1,_LOAD_SIMPLE_LINES),"SIMPLE_LINES_BVH").enqueue(asyncBuildBVH(_LOAD_BVH1,_LOAD_MODERATE_LINES),"MODERATE_LINES_BVH").enqueue(asyncBuildBVH(_LOAD_BVH1,_LOAD_COMPLEX_LINES),"COMPLEX_LINES_BVH").enqueue(WebAssembly.instantiateStreaming(fetch("/res/number_formats.wasm")).then(e=>e.instance.exports),"NUMBER_FORMATS").enqueue(t("draw_rect.vert"),"DRAW_RECT_VERT_SRC").enqueue(t("draw_rect_uvs.vert"),"DRAW_RECT_UVS_VERT_SRC").enqueue(t("draw_col.frag"),"DRAW_COL_FRAG_SRC").enqueue(t("const_col.frag"),"CONST_COL_FRAG_SRC").enqueue(loadShaderSource("draw_lines.vert"),"DRAW_LINES_VERT_SRC").enqueue(loadShaderSource("draw_bbox.vert"),"DRAW_BBOX_VERT_SRC").enqueue(loadShaderSource("draw_lights_binary.frag"),"DRAW_LIGHTS_BINARY_FRAG_SRC").enqueue(loadShaderSource("draw_lights_pcf.frag"),"DRAW_LIGHTS_PCF_FRAG_SRC").enqueue(loadShaderSource("draw_lights_bbox.vert"),"DRAW_LIGHTS_BBOX_VERT_SRC").enqueue(loadShaderSource("draw_lights_obbox.vert"),"DRAW_LIGHTS_OBBOX_VERT_SRC").enqueue(loadShaderSource("draw_obbox.vert"),"DRAW_OBBOX_VERT_SRC").enqueue(loadShaderSource("gen_bbox.frag"),"GEN_BBOX_FRAG_SRC").enqueue(loadShaderSource("gen_obbox.frag"),"GEN_OBBOX_FRAG_SRC").enqueue(loadShaderSource("gen_plane_map.frag"),"GEN_PLANE_MAP_FRAG_SRC");class TextureFramebuffer{constructor(e,t,E,r,n,R,i,a){this.GL=e,this.width=n,this.height=R,this.texture=e.createTexture(),this.framebuffer=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,this.texture),e.texImage2D(e.TEXTURE_2D,0,t,n,R,0,E,r,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,a),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.bindFramebuffer(e.FRAMEBUFFER,this.framebuffer),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.texture,0);let T=e.checkFramebufferStatus(e.FRAMEBUFFER);if(T!=e.FRAMEBUFFER_COMPLETE){var u="Framebuffer marked as incomplete!";throw console.log(u),alert(u),Error(u)}e.bindFramebuffer(e.FRAMEBUFFER,null)}bind(e){let t=this.GL;t.viewport(0,0,this.width,this.height),t.bindFramebuffer(t.FRAMEBUFFER,this.framebuffer),t.drawBuffers([t.COLOR_ATTACHMENT0]),e()}destroy(){let e=this.GL;null!=this.framebuffer&&(e.deleteFramebuffer(this.framebuffer),this.framebuffer=null),null!=this.texture&&(e.deleteTexture(this.texture),this.texture=null)}}class CircularMappingCanvasContext{constructor(e){let t=e.getContext("webgl2",{alpha:!1,depth:!1,stencil:!1});if(this.hasFloatRenderTargets=t&&null!=t.getExtension("EXT_color_buffer_float"),this.hasFloatBlending=t&&null!=t.getExtension("EXT_float_blend"),this.canvas=e,this.valid=t&&this.hasFloatRenderTargets&&this.hasFloatBlending,this.redraw=()=>{},!this.valid)return;t.disable(t.CULL_FACE),t.disable(t.STENCIL_TEST),t.disable(t.DEPTH_TEST);let E=this;this.resourceLoaded=_RESOURCES.then(()=>{let a=r(t,_RESOURCES.DRAW_RECT_VERT_SRC,t.VERTEX_SHADER),T=r(t,_RESOURCES.DRAW_RECT_UVS_VERT_SRC,t.VERTEX_SHADER),u=r(t,_RESOURCES.DRAW_COL_FRAG_SRC,t.FRAGMENT_SHADER),l=r(t,_RESOURCES.CONST_COL_FRAG_SRC,t.FRAGMENT_SHADER),o=r(t,_RESOURCES.DRAW_LINES_VERT_SRC,t.VERTEX_SHADER),s=r(t,_RESOURCES.DRAW_BBOX_VERT_SRC,t.VERTEX_SHADER),S=r(t,_RESOURCES.DRAW_LIGHTS_BINARY_FRAG_SRC,t.FRAGMENT_SHADER),d=r(t,_RESOURCES.DRAW_LIGHTS_PCF_FRAG_SRC,t.FRAGMENT_SHADER),h=r(t,_RESOURCES.DRAW_LIGHTS_BBOX_VERT_SRC,t.VERTEX_SHADER),A=r(t,_RESOURCES.DRAW_LIGHTS_OBBOX_VERT_SRC,t.VERTEX_SHADER),c=r(t,_RESOURCES.DRAW_OBBOX_VERT_SRC,t.VERTEX_SHADER),L=r(t,_RESOURCES.GEN_BBOX_FRAG_SRC,t.FRAGMENT_SHADER),g=r(t,_RESOURCES.GEN_OBBOX_FRAG_SRC,t.FRAGMENT_SHADER),D=r(t,_RESOURCES.GEN_PLANE_MAP_FRAG_SRC,t.FRAGMENT_SHADER),B=n(t,o,l),U=n(t,T,D),b=n(t,a,L),O=n(t,a,g),f=n(t,h,S),C=n(t,A,S),N=n(t,h,d),F=n(t,A,d),m=n(t,s,u),x=n(t,c,u);B.loc={lines:R(t,B,"lines"),constCol:R(t,B,"constCol")},U.loc={inRectBounds:R(t,U,"inRectBounds"),v1LinesBvh:R(t,U,"v1LinesBvh"),lightingData:R(t,U,"lightingData")},[b,O].forEach(e=>{e.loc={inRectBounds:R(t,e,"inRectBounds"),lightPlaneMap:R(t,e,"lightPlaneMap"),lightingData:R(t,e,"lightingData")}}),[f,C,N,F].forEach(e=>{e.loc={invNumLights:R(t,e,"invNumLights"),lightPlaneMap:R(t,e,"lightPlaneMap"),lightingData:R(t,e,"lightingData")}}),[f,N].forEach(e=>{e.loc.lightBounds=R(t,e,"lightBBox")}),[C,F].forEach(e=>{e.loc.lightBounds=R(t,e,"lightOBBox")}),m.loc={lightBounds:R(t,m,"lightBBox")},x.loc={lightBounds:R(t,x,"lightOBBox")},i(t,a,T,u,l,o,s,S,d,h,A,c,L,g,D);let $=_RESOURCES.NUMBER_FORMATS.r11g11b10,M=(e,t,E,r)=>{let n=new Uint32Array(4),R=new Float32Array(n.buffer);return R[0]=e[0],R[1]=e[1],R[2]=t,n[3]=$(r[0]*E,r[1]*E,r[2]*E),n},X=e=>{let t=new Uint32Array(4*e.length),E=new Float32Array(t.buffer);for(let r=0;r<e.length;++r){let n=e[r];E[4*r+0]=n.position[0],E[4*r+1]=n.position[1],E[4*r+2]=n.decayRate;let R=n.colour,i=n.intensity;t[4*r+3]=$(R[0]*i,R[1]*i,R[2]*i)}return t},_=[],I=Math.random,w=1;for(let P=0;P<128;++P)_.push({position:[.5*I()+.25,.5*I()+.25],decayRate:1+10*I(),intensity:1*I(),colour:[I(),I(),I()]});_[0].intensity=1;let G=(e,E)=>{let r=e.length/4,n=E.length/4,R=n/3,i=t.createTexture();t.bindTexture(t.TEXTURE_2D,i),t.texImage2D(t.TEXTURE_2D,0,t.RGBA32F,n,1,0,t.RGBA,t.FLOAT,E),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST);let a=t.createTexture();return t.bindTexture(t.TEXTURE_2D,a),t.texImage2D(t.TEXTURE_2D,0,t.RGBA32F,r,1,0,t.RGBA,t.FLOAT,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),{numLines:r,numBvhFloat4:n,numBvhEntries:R,bvhTexture:i,linesTexture:a}},p=[G(_RESOURCES.SIMPLE_LINES,_RESOURCES.SIMPLE_LINES_BVH),G(_RESOURCES.MODERATE_LINES,_RESOURCES.MODERATE_LINES_BVH),G(_RESOURCES.COMPLEX_LINES,_RESOURCES.COMPLEX_LINES_BVH)],v=t.createTexture();t.bindTexture(t.TEXTURE_2D,v),t.texImage2D(t.TEXTURE_2D,0,t.RGBA32UI,128,1,0,t.RGBA_INTEGER,t.UNSIGNED_INT,X(_)),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST);let H=()=>{t.bindFramebuffer(t.FRAMEBUFFER,null),t.drawBuffers([t.BACK]),t.viewport(0,0,e.width,e.height)},V=e=>{e.sort((e,t)=>e[0]-t[0]);let t=e.length-1;for(;t>0;--t){let E=e[t],r=e[t-1];r[1]>=E[0]&&(r[1]=Math.max(r[1],E[1]),e.pop(t))}},y=()=>(e.width!==e.clientWidth||e.height!==e.clientHeight)&&(e.width=e.clientWidth,e.height=e.clientHeight,!0),W=()=>{E.redrawRequested=!1;let e=E.currentPlaneMapResolution!=E.newPlaneMapResolution,r=e||E.currentScene!=E.newScene,n=E.currentlyUsingOBbox!=E.newUsingOBbox,R=[],i=[];if(e&&(null!=E.planeMapFb&&(E.planeMapFb.destroy(),E.planeMapFb=null),E.planeMapFb=new TextureFramebuffer(t,t.RGB10_A2,t.RGBA,t.UNSIGNED_INT_2_10_10_10_REV,E.newPlaneMapResolution,128,t.REPEAT,t.CLAMP_TO_EDGE),E.currentPlaneMapResolution=E.newPlaneMapResolution),n&&(null!=E.boundsFb&&(E.boundsFb.destroy(),E.boundsFb=null),E.boundsFb=new TextureFramebuffer(t,E.newUsingOBbox?t.RGBA32UI:t.RGBA32F,E.newUsingOBbox?t.RGBA_INTEGER:t.RGBA,E.newUsingOBbox?t.UNSIGNED_INT:t.FLOAT,128,1,t.CLAMP_TO_EDGE,t.CLAMP_TO_EDGE),E.currentlyUsingOBbox=E.newUsingOBbox),r?(E.currentScene=E.newScene,R.push([0,E.currentNumLightsToRender])):n&&i.push([0,E.currentNumLightsToRender]),E.currentNumLightsToRender!=E.newNumLightsToRender&&(E.newNumLightsToRender>E.currentNumLightsToRender&&R.push([E.currentNumLightsToRender,E.newNumLightsToRender]),E.currentNumLightsToRender=E.newNumLightsToRender),E.dirtyLights.length>0){let a=new Set(E.dirtyLights);t.bindTexture(t.TEXTURE_2D,v),a.forEach(e=>{let E=_[e],r=M(E.position,E.decayRate,E.intensity,E.colour);t.texSubImage2D(t.TEXTURE_2D,0,e,0,1,1,t.RGBA_INTEGER,t.UNSIGNED_INT,r),R.push([e,e+1])}),E.dirtyLights=[]}V(R),R.forEach(e=>{i.push(e)}),V(i),R.length>0&&(t.disable(t.BLEND),E.planeMapFb.bind(()=>{t.useProgram(U),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,p[E.currentScene].bvhTexture),t.uniform1i(U.loc.v1LinesBvh,0),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,v),t.uniform1i(U.loc.lightingData,1);let e=1/E.planeMapFb.height;R.forEach(E=>{t.uniform4f(U.loc.inRectBounds,0,E[0]*e,1,E[1]*e),t.drawArrays(t.TRIANGLES,0,6)})})),i.length>0&&(t.disable(t.BLEND),E.boundsFb.bind(()=>{let e=E.newUsingOBbox?O:b;t.useProgram(e),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,E.planeMapFb.texture),t.uniform1i(e.loc.lightPlaneMap,0),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,v),t.uniform1i(e.loc.lightingData,1);let r=1/E.boundsFb.width;i.forEach(E=>{t.uniform4f(e.loc.inRectBounds,E[0]*r,0,E[1]*r,1),t.drawArrays(t.TRIANGLES,0,6)})})),(y()||R.length>0||i.length>0)&&H(),t.clear(t.COLOR_BUFFER_BIT),t.enable(t.BLEND),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ONE);{let T=E.currentlyUsingOBbox?E.usePCF?F:C:E.usePCF?N:f;t.useProgram(T),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,E.planeMapFb.texture),t.uniform1i(T.loc.lightPlaneMap,0),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,v),t.uniform1i(T.loc.lightingData,1),t.activeTexture(t.TEXTURE2),t.bindTexture(t.TEXTURE_2D,E.boundsFb.texture),t.uniform1i(T.loc.lightBounds,2),t.uniform1f(T.loc.invNumLights,.0078125),t.drawArrays(t.TRIANGLES,0,6*E.currentNumLightsToRender)}if(E.drawLines&&(t.blendFunc(t.ONE_MINUS_DST_COLOR,t.ONE_MINUS_SRC_ALPHA),t.useProgram(B),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,p[E.currentScene].linesTexture),t.uniform1i(B.loc.lines,0),t.uniform4f(B.loc.constCol,1,1,1,1),t.drawArrays(t.LINES,0,2*p[E.currentScene].numLines)),E.drawBounds){let u=E.currentlyUsingOBbox?x:m;t.enable(t.BLEND),t.blendFunc(t.ONE_MINUS_DST_COLOR,t.ONE_MINUS_SRC_ALPHA),t.useProgram(u),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,E.boundsFb.texture),t.uniform1i(u.loc.lightingData,0),t.drawArrays(t.LINES,0,8*E.currentNumLightsToRender)}},q=()=>{E.redrawRequested||(E.redrawRequested=!0,window.requestAnimationFrame(W))};E.maxLights=128,E.lights=_,E.dirtyLights=[],E.currentNumLightsToRender=10,E.newNumLightsToRender=10,E.currentPlaneMapResolution=0,E.newPlaneMapResolution=512,E.planeMapFb=null,E.boundsFb=null,E.currentScene=-1,E.newScene=0,E.currentlyUsingOBbox=!1,E.newUsingOBbox=!0,E.usePCF=!0,E.drawLines=!0,E.drawBounds=!1,E.drawRequested=!1,E.drawing=!1,E.redrawRequested=!1,E.redraw=q,W()})}}export function bindCircularMappingContext(e){return void 0==e.drawCtx&&(e.drawCtx=new CircularMappingCanvasContext(e)),e.drawCtx}