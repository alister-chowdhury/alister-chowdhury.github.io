import{AsyncBarrier as e,createShader as t,createGraphicsProgram as r,getUniformLocation as a,deleteShaders as n}from"../../util.js";let IS_LITTLE_ENDIAN=902392147==new DataView(new Uint32Array([902392147]).buffer).getUint32(0,!0);function loadShaderSource(e){return fetch("./shaders/compiled/"+e).then(e=>e.text())}let loadF32Lines=IS_LITTLE_ENDIAN?async e=>fetch(e).then(e=>e.blob().then(e=>e.arrayBuffer().then(e=>new Float32Array(e)))):async e=>fetch(e).then(e=>e.blob().then(e=>e.arrayBuffer().then(e=>{let t=Math.floor(e.byteLength/4),r=new DataView(e),a=new Float32Array(t);for(let n=0;n<t;++n)a[n]=r.getFloat32(4*n,!0);return a}))),_BVH1_DATA=new e().enqueue(loadF32Lines("lines.f32"),"DEFAULT_LINES").enqueue(WebAssembly.instantiateStreaming(fetch("bvh_v1.wasm")).then(e=>e.instance.exports),"BVH_V1"),_GLOBAL_SHADERS_DATA=new e().enqueue(loadShaderSource("draw_full_screen_uvs.vert"),"DRAW_FULL_SCREEN_UVS_VERT"),_RESOURCES=new e().enqueue(_BVH1_DATA.selfBarrier(),null,["DEFAULT_LINES","BVH_V1"]).enqueue(_GLOBAL_SHADERS_DATA.selfBarrier(),null,["DRAW_FULL_SCREEN_UVS_VERT"]).enqueue(loadShaderSource("v1_draw_bvh.frag"),"V1_DRAW_BVH_FRAG_SRC").enqueue(loadShaderSource("v1_draw_bvh_all.vert"),"V1_DRAW_BVH_ALL_VERT_SRC").enqueue(loadShaderSource("v1_draw_bvh_bbox.vert"),"V1_DRAW_BVH_BBOX_VERT_SRC").enqueue(loadShaderSource("v1_draw_bvh_lines.vert"),"V1_DRAW_BVH_LINES_VERT_SRC").enqueue(loadShaderSource("v1_tracing_test_composite.frag"),"V1_TRACING_TEST_COMPOSITE_FRAG_SRC").enqueue(loadShaderSource("v1_tracing_test_line_id.frag"),"V1_TRACING_TEST_LINE_ID_FRAG_SRC").enqueue(loadShaderSource("v1_tracing_test_num_intersections.frag"),"V1_TRACING_TEST_NUM_INTERSECTIONS_FRAG_SRC").enqueue(loadShaderSource("v1_tracing_test_num_visits.frag"),"V1_TRACING_TEST_NUM_VISITS_FRAG_SRC").enqueue(loadShaderSource("v1_tracing_test_visibility.frag"),"V1_TRACING_TEST_VISIBILITY_FRAG_SRC").enqueue(loadShaderSource("v1_tracing_test_pointlight.frag"),"V1_TRACING_TEST_POINTLIGHT_FRAG_SRC");export function generateBVH(e){let t=_BVH1_DATA.BVH_V1,r=e.length/4;if(!t.allocateLines(r)){var a=`Failed to allocate lines (num: ${r}).`;throw console.log(a),alert(a),Error(a)}new Float32Array(t.memory.buffer,t.getLinesBuffer(),e.length).set(e);let n=t.buildBvh(r);if(!n){var a="Failed to build BVH!";throw console.log(a),alert(a),Error(a)}return new Float32Array(t.memory.buffer,t.getBvhBuffer(),12*n)}class BvhV1CanvasContext{constructor(e){let E=e.getContext("webgl2");if(this.canvas=e,this.valid=!!E,this.redraw=()=>{},!this.valid)return;let R=this;this.resourceLoaded=_RESOURCES.then(()=>{let T=t(E,_RESOURCES.DRAW_FULL_SCREEN_UVS_VERT,E.VERTEX_SHADER),i=t(E,_RESOURCES.V1_DRAW_BVH_FRAG_SRC,E.FRAGMENT_SHADER),S=t(E,_RESOURCES.V1_DRAW_BVH_ALL_VERT_SRC,E.VERTEX_SHADER),u=t(E,_RESOURCES.V1_DRAW_BVH_BBOX_VERT_SRC,E.VERTEX_SHADER),o=t(E,_RESOURCES.V1_DRAW_BVH_LINES_VERT_SRC,E.VERTEX_SHADER),l=t(E,_RESOURCES.V1_TRACING_TEST_COMPOSITE_FRAG_SRC,E.FRAGMENT_SHADER),d=t(E,_RESOURCES.V1_TRACING_TEST_LINE_ID_FRAG_SRC,E.FRAGMENT_SHADER),h=t(E,_RESOURCES.V1_TRACING_TEST_NUM_INTERSECTIONS_FRAG_SRC,E.FRAGMENT_SHADER),s=t(E,_RESOURCES.V1_TRACING_TEST_NUM_VISITS_FRAG_SRC,E.FRAGMENT_SHADER),A=t(E,_RESOURCES.V1_TRACING_TEST_VISIBILITY_FRAG_SRC,E.FRAGMENT_SHADER),v=t(E,_RESOURCES.V1_TRACING_TEST_POINTLIGHT_FRAG_SRC,E.FRAGMENT_SHADER),c=r(E,S,i),_=r(E,u,i),V=r(E,o,i),C=r(E,T,l),L=r(E,T,d),D=r(E,T,h),f=r(E,T,s),I=r(E,T,A),B=r(E,T,v);[c,_,V,C,L,D,f,I,B].forEach(e=>{e.loc={}}),[c,_,V,C,L,D,f,I,B].forEach(e=>{e.loc.v1LinesBvh=a(E,e,"v1LinesBvh")}),[C,L,D,f,I,B].forEach(e=>{e.loc.targetUV=a(E,e,"targetUV")}),n(E,T,i,S,u,o,l,d,h,s,A,v);let g=e=>{void 0!=R.bvhData&&null!=R.bvhData.texture&&(E.deleteTexture(R.bvhData.texture),R.bvhData.texture=null),void 0!=e&&e.length||(e=new Float32Array([1/0,1/0,1/0,1/0]));let t=e.length/4,r=generateBVH(e),a=r.length/4,n=a/3,T=E.createTexture();E.bindTexture(E.TEXTURE_2D,T),E.texImage2D(E.TEXTURE_2D,0,E.RGBA32F,a,1,0,E.RGBA,E.FLOAT,r),E.texParameteri(E.TEXTURE_2D,E.TEXTURE_WRAP_S,E.CLAMP_TO_EDGE),E.texParameteri(E.TEXTURE_2D,E.TEXTURE_WRAP_T,E.CLAMP_TO_EDGE),E.texParameteri(E.TEXTURE_2D,E.TEXTURE_MIN_FILTER,E.NEAREST),E.texParameteri(E.TEXTURE_2D,E.TEXTURE_MAG_FILTER,E.NEAREST),R.bvhData={numLines:t,numFloat4:a,numEntries:n,texture:T}},U=()=>{E.bindFramebuffer(E.FRAMEBUFFER,null),E.drawBuffers([E.BACK]),E.viewport(0,0,e.width,e.height)},N=()=>{(e.width!==e.clientWidth||e.height!==e.clientHeight)&&(e.width=e.clientWidth,e.height=e.clientHeight,U())},G=()=>{N();{let e=null;switch(R.rayVisMode){case 0:e=B;break;case 1:e=I;break;case 2:e=D;break;case 3:e=f;break;case 4:e=C;break;default:e=L}E.useProgram(e),E.activeTexture(E.TEXTURE0),E.bindTexture(E.TEXTURE_2D,R.bvhData.texture),E.uniform1i(e.loc.v1LinesBvh,0),E.uniform2f(e.loc.targetUV,R.visTargetUV[0],R.visTargetUV[1]),E.drawArrays(E.TRIANGLES,0,3)}if(R.drawBvhOverlayMode>0){let t=null;switch(R.drawBvhOverlayMode){case 1:t=V;break;case 2:t=_;break;default:t=c}E.useProgram(t),E.activeTexture(E.TEXTURE0),E.bindTexture(E.TEXTURE_2D,R.bvhData.texture),E.uniform1i(t.loc.v1LinesBvh,0),E.drawArrays(E.LINES,0,16*R.bvhData.numEntries)}};R.drawBvhOverlayMode=1,R.rayVisMode=0,R.visTargetUV=[.4,.6],e.width=e.clientWidth,e.height=e.clientHeight,U(),g(_RESOURCES.DEFAULT_LINES),G();let m=(t,r)=>{t.preventDefault();let a=e.getBoundingClientRect(),n=r?[t.touches[0].clientX,t.touches[0].clientY]:[t.clientX,t.clientY];R.visTargetUV=[(n[0]-a.x)/a.width,1-(n[1]-a.y)/a.height],G()},w=t=>{if("mousedown"==t.type){let r=e=>{m(e,!1)},a=t=>{t.preventDefault(),e.removeEventListener("mousemove",r,!1),e.removeEventListener("mouseup",a,!1)};e.addEventListener("mousemove",r,!1),e.addEventListener("mouseup",a,!1),r(t)}else{let n=e=>{m(e,!0)},E=t=>{t.preventDefault(),e.removeEventListener("touchmove",n,!1),e.removeEventListener("touchend",E,!1)};e.addEventListener("touchmove",n,!1),e.addEventListener("touchend",E,!1),n(t)}};e.addEventListener("mousedown",w,!1),e.addEventListener("touchstart",w,!1),R.updateGpuBvhTexture=g,R.redraw=G})}}export function getDefaultLines(){return _BVH1_DATA.DEFAULT_LINES}export function bindBvh1Context(e){return void 0==e.drawCtx&&(e.drawCtx=new BvhV1CanvasContext(e)),e.drawCtx}export function onResourcesLoaded(e){return _RESOURCES.then(e)}export function onBvh1DataLoaded(e){return _BVH1_DATA.then(e)}