import{AsyncBarrier as e,loadCommonShaderSource as t,loadF32Lines as r}from"../../util.js";import{createShader as a,createGraphicsProgram as E,getUniformLocation as n,deleteShaders as R}from"../../webgl_util.js";function loadShaderSource(e){return fetch("./shaders/compiled/"+e).then(e=>e.text())}let _BVH1_DATA=new e().enqueue(r("/res/lines.f32"),"DEFAULT_LINES").enqueue(WebAssembly.instantiateStreaming(fetch("/res/bvh_v1.wasm")).then(e=>e.instance.exports),"BVH_V1"),_GLOBAL_SHADERS_DATA=new e().enqueue(t("draw_full_screen_uvs.vert"),"DRAW_FULL_SCREEN_UVS_VERT"),_RESOURCES=new e().enqueue(_BVH1_DATA.selfBarrier(),null,["DEFAULT_LINES","BVH_V1"]).enqueue(_GLOBAL_SHADERS_DATA.selfBarrier(),null,["DRAW_FULL_SCREEN_UVS_VERT"]).enqueue(t("draw_col.frag"),"V1_DRAW_BVH_FRAG_SRC").enqueue(loadShaderSource("v1_draw_bvh_all.vert"),"V1_DRAW_BVH_ALL_VERT_SRC").enqueue(loadShaderSource("v1_draw_bvh_bbox.vert"),"V1_DRAW_BVH_BBOX_VERT_SRC").enqueue(loadShaderSource("v1_draw_bvh_lines.vert"),"V1_DRAW_BVH_LINES_VERT_SRC").enqueue(loadShaderSource("v1_tracing_test_composite.frag"),"V1_TRACING_TEST_COMPOSITE_FRAG_SRC").enqueue(loadShaderSource("v1_tracing_test_line_id.frag"),"V1_TRACING_TEST_LINE_ID_FRAG_SRC").enqueue(loadShaderSource("v1_tracing_test_num_intersections.frag"),"V1_TRACING_TEST_NUM_INTERSECTIONS_FRAG_SRC").enqueue(loadShaderSource("v1_tracing_test_num_visits.frag"),"V1_TRACING_TEST_NUM_VISITS_FRAG_SRC").enqueue(loadShaderSource("v1_tracing_test_visibility.frag"),"V1_TRACING_TEST_VISIBILITY_FRAG_SRC").enqueue(loadShaderSource("v1_tracing_test_pointlight.frag"),"V1_TRACING_TEST_POINTLIGHT_FRAG_SRC");export function generateBVH(e){let t=_BVH1_DATA.BVH_V1,r=e.length/4;if(!t.allocateLines(r)){var a=`Failed to allocate lines (num: ${r}).`;throw console.log(a),alert(a),Error(a)}new Float32Array(t.memory.buffer,t.getLinesBuffer(),e.length).set(e);let E=t.buildBvh(r);if(!E){var a="Failed to build BVH!";throw console.log(a),alert(a),Error(a)}return new Float32Array(t.memory.buffer,t.getBvhBuffer(),12*E)}class BvhV1CanvasContext{constructor(e){let t=e.getContext("webgl2",{alpha:!1,depth:!1});if(this.canvas=e,this.valid=!!t,this.redraw=()=>{},!this.valid)return;let r=this;this.resourceLoaded=_RESOURCES.then(()=>{let i=a(t,_RESOURCES.DRAW_FULL_SCREEN_UVS_VERT,t.VERTEX_SHADER),T=a(t,_RESOURCES.V1_DRAW_BVH_FRAG_SRC,t.FRAGMENT_SHADER),S=a(t,_RESOURCES.V1_DRAW_BVH_ALL_VERT_SRC,t.VERTEX_SHADER),u=a(t,_RESOURCES.V1_DRAW_BVH_BBOX_VERT_SRC,t.VERTEX_SHADER),o=a(t,_RESOURCES.V1_DRAW_BVH_LINES_VERT_SRC,t.VERTEX_SHADER),l=a(t,_RESOURCES.V1_TRACING_TEST_COMPOSITE_FRAG_SRC,t.FRAGMENT_SHADER),s=a(t,_RESOURCES.V1_TRACING_TEST_LINE_ID_FRAG_SRC,t.FRAGMENT_SHADER),d=a(t,_RESOURCES.V1_TRACING_TEST_NUM_INTERSECTIONS_FRAG_SRC,t.FRAGMENT_SHADER),v=a(t,_RESOURCES.V1_TRACING_TEST_NUM_VISITS_FRAG_SRC,t.FRAGMENT_SHADER),A=a(t,_RESOURCES.V1_TRACING_TEST_VISIBILITY_FRAG_SRC,t.FRAGMENT_SHADER),h=a(t,_RESOURCES.V1_TRACING_TEST_POINTLIGHT_FRAG_SRC,t.FRAGMENT_SHADER),V=E(t,S,T),_=E(t,u,T),c=E(t,o,T),C=E(t,i,l),D=E(t,i,s),L=E(t,i,d),g=E(t,i,v),U=E(t,i,A),B=E(t,i,h);[V,_,c,C,D,L,g,U,B].forEach(e=>{e.loc={}}),[V,_,c,C,D,L,g,U,B].forEach(e=>{e.loc.v1LinesBvh=n(t,e,"v1LinesBvh")}),[C,D,L,g,U,B].forEach(e=>{e.loc.targetUV=n(t,e,"targetUV")}),R(t,i,T,S,u,o,l,s,d,v,A,h);let I=e=>{void 0!=r.bvhData&&null!=r.bvhData.texture&&(t.deleteTexture(r.bvhData.texture),r.bvhData.texture=null),void 0!=e&&e.length||(e=new Float32Array([1/0,1/0,1/0,1/0]));let a=e.length/4,E=generateBVH(e),n=E.length/4,R=n/3,i=t.createTexture();t.bindTexture(t.TEXTURE_2D,i),t.texImage2D(t.TEXTURE_2D,0,t.RGBA32F,n,1,0,t.RGBA,t.FLOAT,E),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),r.bvhData={numLines:a,numFloat4:n,numEntries:R,texture:i}},f=()=>{t.bindFramebuffer(t.FRAMEBUFFER,null),t.drawBuffers([t.BACK]),t.viewport(0,0,e.width,e.height)},N=()=>{(e.width!==e.clientWidth||e.height!==e.clientHeight)&&(e.width=e.clientWidth,e.height=e.clientHeight,f())},m=()=>{N();{let e=null;switch(r.rayVisMode){case 0:e=B;break;case 1:e=U;break;case 2:e=L;break;case 3:e=g;break;case 4:e=C;break;default:e=D}t.useProgram(e),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,r.bvhData.texture),t.uniform1i(e.loc.v1LinesBvh,0),t.uniform2f(e.loc.targetUV,r.visTargetUV[0],r.visTargetUV[1]),t.drawArrays(t.TRIANGLES,0,3)}if(r.drawBvhOverlayMode>0){let a=null;switch(r.drawBvhOverlayMode){case 1:a=c;break;case 2:a=_;break;default:a=V}t.useProgram(a),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,r.bvhData.texture),t.uniform1i(a.loc.v1LinesBvh,0),t.drawArrays(t.LINES,0,16*r.bvhData.numEntries)}};r.drawBvhOverlayMode=1,r.rayVisMode=0,r.visTargetUV=[.4,.6],r.allowWallClipping=!0,e.width=e.clientWidth,e.height=e.clientHeight;let G=_RESOURCES.BVH_V1;f(),I(_RESOURCES.DEFAULT_LINES),m();let w=(t,a)=>{t.preventDefault();let E=e.getBoundingClientRect(),n=a?[t.touches[0].clientX,t.touches[0].clientY]:[t.clientX,t.clientY],R=[(n[0]-E.x)/E.width,1-(n[1]-E.y)/E.height];!r.allowWallClipping&&G.traceBvh(r.visTargetUV[0],r.visTargetUV[1],R[0]-r.visTargetUV[0],R[1]-r.visTargetUV[1],1,0)&&(R=r.visTargetUV),r.visTargetUV=R,m()},F=t=>{if("mousedown"==t.type){let r=e=>{w(e,!1)},a=t=>{t.preventDefault(),e.removeEventListener("mousemove",r,!1),e.removeEventListener("mouseup",a,!1)};e.addEventListener("mousemove",r,!1),e.addEventListener("mouseup",a,!1),r(t)}else{let E=e=>{w(e,!0)},n=t=>{t.preventDefault(),e.removeEventListener("touchmove",E,!1),e.removeEventListener("touchend",n,!1)};e.addEventListener("touchmove",E,!1),e.addEventListener("touchend",n,!1),E(t)}};e.addEventListener("mousedown",F,!1),e.addEventListener("touchstart",F,!1),r.updateGpuBvhTexture=I,r.redraw=m})}}export function getDefaultLines(){return _BVH1_DATA.DEFAULT_LINES}export function bindBvh1Context(e){return void 0==e.drawCtx&&(e.drawCtx=new BvhV1CanvasContext(e)),e.drawCtx}export function onResourcesLoaded(e){return _RESOURCES.then(e)}export function onBvh1DataLoaded(e){return _BVH1_DATA.then(e)}