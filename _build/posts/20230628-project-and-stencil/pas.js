import{AsyncBarrier as e,loadCommonShaderSource as t,loadF32Lines as E}from"../../util.js";import{createShader as r,createGraphicsProgram as l,getUniformLocation as n,deleteShaders as i}from"../../webgl_util.js";function loadShaderSource(e){return fetch("./shaders/compiled/"+e).then(e=>e.text())}let _RESOURCES=new e().enqueue(E("/res/lines.f32").then(e=>{for(let t=0;t<e.length;++t)e[t]=2*e[t]-1;return e}),"DEFAULT_LINES").enqueue(t("draw_full_screen.vert"),"DRAW_FULL_SCREEN_VERT").enqueue(t("draw_full_screen_uvs.vert"),"DRAW_FULL_SCREEN_UVS_VERT").enqueue(t("const_col.frag"),"CONST_COL_FRAG_SRC").enqueue(loadShaderSource("project_lines.vert"),"PROJECT_LINES_VERT_SRC").enqueue(loadShaderSource("draw_lines.vert"),"DRAW_LINES_VERT_SRC").enqueue(loadShaderSource("draw_select_overlay.vert"),"DRAW_SELECT_OVERLAY_VERT_SRC").enqueue(loadShaderSource("draw_select_overlay.frag"),"DRAW_SELECT_OVERLAY_FRAG_SRC");class PASCanvasContext{constructor(e){let t=e.getContext("webgl2",{alpha:!1,depth:!0,stencil:!0});if(this.canvas=e,this.valid=!!t,this.redraw=()=>{},!this.valid)return;let E=this,a=.1*.1;this.resourceLoaded=_RESOURCES.then(()=>{let o=r(t,_RESOURCES.DRAW_FULL_SCREEN_VERT,t.VERTEX_SHADER),s=r(t,_RESOURCES.PROJECT_LINES_VERT_SRC,t.VERTEX_SHADER),$=r(t,_RESOURCES.DRAW_LINES_VERT_SRC,t.VERTEX_SHADER),R=r(t,_RESOURCES.CONST_COL_FRAG_SRC,t.FRAGMENT_SHADER),T=r(t,_RESOURCES.DRAW_SELECT_OVERLAY_VERT_SRC,t.VERTEX_SHADER),c=r(t,_RESOURCES.DRAW_SELECT_OVERLAY_FRAG_SRC,t.FRAGMENT_SHADER),S=l(t,s),u=l(t,$,R),d=l(t,o,R),L=l(t,T,c);S.loc={lines:n(t,S,"lines"),playerPosition:n(t,S,"playerPosition")},u.loc={lines:n(t,u,"lines"),constCol:n(t,u,"constCol")},d.loc={constCol:n(t,d,"constCol")},L.loc={bbox:n(t,L,"bbox")},i(t,o,s,$,R,T,c);let _=_RESOURCES.DEFAULT_LINES,h=_.length/4,A=9*h,C=t.createTexture();t.bindTexture(t.TEXTURE_2D,C),t.texImage2D(t.TEXTURE_2D,0,t.RGBA32F,h,1,0,t.RGBA,t.FLOAT,_),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST);let p=()=>{t.bindFramebuffer(t.FRAMEBUFFER,null),t.drawBuffers([t.BACK]),t.viewport(0,0,e.width,e.height)},f=()=>{(e.width!==e.clientWidth||e.height!==e.clientHeight)&&(e.width=e.clientWidth,e.height=e.clientHeight,p())},v=()=>{f(),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT|t.STENCIL_BUFFER_BIT);let e=[];if(this.players.forEach(t=>{t.enabled&&e.push(t)}),e.length>0){if(t.useProgram(S),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,C),t.uniform1i(S.loc.lines,0),t.disable(t.DEPTH_TEST),t.enable(t.STENCIL_TEST),t.colorMask(!1,!1,!1,!1),0==this.displayType){t.stencilMask(255),t.stencilOp(t.KEEP,t.KEEP,t.INCR);for(let E=0;E<e.length;++E)E==e.length-1&&(t.depthFunc(t.ALWAYS),t.enable(t.DEPTH_TEST)),t.stencilFunc(t.EQUAL,E,255),t.uniform2f(S.loc.playerPosition,e[E].p[0],e[E].p[1]),t.drawArrays(t.TRIANGLES,0,A);t.disable(t.STENCIL_TEST),t.depthFunc(t.LESS),t.enable(t.DEPTH_TEST),t.colorMask(!0,!0,!0,!0),t.useProgram(d),t.uniform4f(d.loc.constCol,1,1,1,1),t.drawArrays(t.TRIANGLES,0,3)}else t.stencilOp(t.REPLACE,t.REPLACE,t.REPLACE),e.forEach(e=>{let E=1<<e.i;t.stencilFunc(t.ALWAYS,E,E),t.stencilMask(E),t.uniform2f(S.loc.playerPosition,e.p[0],e.p[1]),t.drawArrays(t.TRIANGLES,0,A)}),t.enable(t.BLEND),t.blendFunc(t.ONE,t.ONE),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.stencilMask(255),t.colorMask(!0,!0,!0,!0),t.useProgram(d),e.forEach(e=>{let E=1<<e.i;t.stencilFunc(t.NOTEQUAL,E,E),t.uniform4f(d.loc.constCol,e.c[0],e.c[1],e.c[2],e.c[3]),t.drawArrays(t.TRIANGLES,0,3)});t.disable(t.STENCIL_TEST),t.disable(t.BLEND)}t.disable(t.DEPTH_TEST),this.drawLinesOverlay&&(t.useProgram(u),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,C),t.uniform1i(u.loc.lines,0),t.uniform4f(u.loc.constCol,.3,.86,.8,1),t.drawArrays(t.LINES,0,2*h)),this.drawSelectOverlay&&(t.enable(t.BLEND),t.blendFunc(t.ONE_MINUS_DST_COLOR,t.ONE_MINUS_SRC_ALPHA),t.useProgram(L),e.forEach(e=>{t.uniform4f(L.loc.bbox,e.p[0]-.1,e.p[1]-.1,e.p[0]+.1,e.p[1]+.1),t.drawArrays(t.TRIANGLES,0,6)}),t.disable(t.BLEND))};this.displayType=0,this.drawSelectOverlay=!0,this.drawLinesOverlay=!0,this.players=[{enabled:!0,i:0,c:[1,0,0,0],p:[-.704384548584,.8338315304911]},{enabled:!0,i:1,c:[0,1,0,0],p:[-.2814942390868,.135869236065]},{enabled:!0,i:2,c:[0,0,1,0],p:[.3361222420398,-.7242188225105]},{enabled:!0,i:3,c:[.7,0,.7,0],p:[.7372218132636,.3643838825913]}],p(),v();let D=t=>{let E=e.getBoundingClientRect();return[(t[0]-E.x)/E.width*2-1,(1-(t[1]-E.y)/E.height)*2-1]},m=(e,t,E,r,l)=>{e.preventDefault();let n=l?[e.touches[0].clientX,e.touches[0].clientY]:[e.clientX,e.clientY],i=D(n);t.p=[r[0]+(i[0]-E[0]),r[1]+(i[1]-E[1])],v()},N=t=>{let E=D("mousedown"==t.type?[t.clientX,t.clientY]:[t.touches[0].clientX,t.touches[0].clientY]),r=null;for(let l=0;l<this.players.length;++l){let n=this.players[l];if(n.enabled){let i=[n.p[0]-E[0],n.p[1]-E[1]],o=i[0]*i[0]+i[1]*i[1];if(o<=a){r=n;break}}}if(null===r)return;let s=[r.p[0],r.p[1]];if("mousedown"==t.type){let $=e=>{m(e,r,E,s,!1)},R=t=>{t.preventDefault(),e.removeEventListener("mousemove",$,!1),e.removeEventListener("mouseup",R,!1)};e.addEventListener("mousemove",$,!1),e.addEventListener("mouseup",R,!1),$(t)}else{let T=e=>{m(e,r,E,s,!0)},c=t=>{t.preventDefault(),e.removeEventListener("touchmove",T,!1),e.removeEventListener("touchend",c,!1)};e.addEventListener("touchmove",T,!1),e.addEventListener("touchend",c,!1),T(t)}};e.addEventListener("mousedown",N,!1),e.addEventListener("touchstart",N,!1),E.redraw=v})}}export function bindPasContext(e){return void 0==e.drawCtx&&(e.drawCtx=new PASCanvasContext(e)),e.drawCtx}