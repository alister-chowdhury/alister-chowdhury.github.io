import{AsyncBarrier as e,loadCommonShaderSource as t}from"../../util.js";import{createShader as i,createGraphicsProgram as r,getUniformLocation as s,createDummyVAO as n,deleteShaders as u}from"../../webgl_util.js";function loadShaderSource(e){return fetch("./shaders/compiled/"+e).then(e=>e.text())}class TextureFramebuffer{constructor(e,t,i,r,s,n){this.GL=e,this.width=s,this.height=n,this.texture=e.createTexture(),this.framebuffer=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,this.texture),e.texImage2D(e.TEXTURE_2D,0,t,s,n,0,i,r,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.REPEAT),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.REPEAT),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.bindFramebuffer(e.FRAMEBUFFER,this.framebuffer),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.texture,0);let u=e.checkFramebufferStatus(e.FRAMEBUFFER);if(u!=e.FRAMEBUFFER_COMPLETE){var a="Framebuffer marked as incomplete!";throw console.log(a),alert(a),Error(a)}e.bindFramebuffer(e.FRAMEBUFFER,null)}bind(e){let t=this.GL;t.viewport(0,0,this.width,this.height),t.bindFramebuffer(t.FRAMEBUFFER,this.framebuffer),t.drawBuffers([t.COLOR_ATTACHMENT0]),e()}destroy(){let e=this.GL;null!=this.framebuffer&&(e.deleteFramebuffer(this.framebuffer),this.framebuffer=null),null!=this.texture&&(e.deleteTexture(this.texture),this.texture=null)}}function randomSeed(){return Math.floor(2147483647*Math.random())}let _SHADERS=new e().enqueue(t("draw_full_screen.vert"),"DRAW_FULL_SCREEN_VS_SRC").enqueue(t("draw_full_screen_uvs.vert"),"DRAW_FULL_SCREEN_WITH_UVS_VS_SRC").enqueue(loadShaderSource("void_and_cluster_init.frag"),"VOID_AND_CLUSTER_INIT_FS_SRC").enqueue(loadShaderSource("void_and_cluster_reduce_init.frag"),"VOID_AND_CLUSTER_REDUCE_INIT_FS_SRC").enqueue(loadShaderSource("void_and_cluster_reduce_iter.frag"),"VOID_AND_CLUSTER_REDUCE_ITER_FS_SRC").enqueue(loadShaderSource("void_and_cluster_update.frag"),"VOID_AND_CLUSTER_UPDATE_FS_SRC").enqueue(loadShaderSource("void_and_cluster_partial_update.vert"),"VOID_AND_CLUSTER_PARTIAL_UPDATE_VS_SRC").enqueue(loadShaderSource("vis_bluenoise_tiled.frag"),"VIS_BLUENOISE_TILED_FS_SRC").enqueue(loadShaderSource("vis_bluenoise_scaled.frag"),"VIS_BLUENOISE_SCALED_FS_SRC").enqueue(loadShaderSource("export_first_channel.frag"),"EXPORT_FIRST_CHANNEL_FS_SRC").enqueue(loadShaderSource("bc4_compress.frag"),"BC4_COMPRESS_FS_SRC");class GraphicsPSOs{constructor(e){let t=i(e,_SHADERS.DRAW_FULL_SCREEN_VS_SRC,e.VERTEX_SHADER),a=i(e,_SHADERS.VOID_AND_CLUSTER_INIT_FS_SRC,e.FRAGMENT_SHADER),o=i(e,_SHADERS.VOID_AND_CLUSTER_REDUCE_INIT_FS_SRC,e.FRAGMENT_SHADER),d=i(e,_SHADERS.VOID_AND_CLUSTER_REDUCE_ITER_FS_SRC,e.FRAGMENT_SHADER),l=i(e,_SHADERS.VOID_AND_CLUSTER_UPDATE_FS_SRC,e.FRAGMENT_SHADER),h=i(e,_SHADERS.VOID_AND_CLUSTER_PARTIAL_UPDATE_VS_SRC,e.VERTEX_SHADER),E=i(e,_SHADERS.VIS_BLUENOISE_TILED_FS_SRC,e.FRAGMENT_SHADER),S=i(e,_SHADERS.DRAW_FULL_SCREEN_WITH_UVS_VS_SRC,e.VERTEX_SHADER),R=i(e,_SHADERS.VIS_BLUENOISE_SCALED_FS_SRC,e.FRAGMENT_SHADER),T=i(e,_SHADERS.EXPORT_FIRST_CHANNEL_FS_SRC,e.FRAGMENT_SHADER),A=i(e,_SHADERS.BC4_COMPRESS_FS_SRC,e.FRAGMENT_SHADER);this.dummyVao=n(e),this.voidAndClusterInit=r(e,t,a),this.voidAndClusterReduceInit=r(e,t,o),this.voidAndClusterReduceIter=r(e,t,d),this.voidAndClusterFullUpdate=r(e,t,l),this.voidAndClusterPartialUpdate=r(e,h,l),this.visBluenoiseTiled=r(e,t,E),this.visBluenoiseScaled=r(e,S,R),this.exportFirstChannel=r(e,t,T),this.bc4Compress=r(e,t,A),u(e,t,a,o,d,l,h,E,S,R,T,A),this.voidAndClusterInitLoc={backgroundEnergySeed:s(e,this.voidAndClusterInit,"backgroundEnergySeed")},this.voidAndClusterReduceInitLoc={maxSizeAndSeed:s(e,this.voidAndClusterReduceInit,"maxSizeAndSeed"),noiseEnergyMap:s(e,this.voidAndClusterReduceInit,"noiseEnergyMap")},this.voidAndClusterReduceIterLoc={maxSizeAndSeed:s(e,this.voidAndClusterReduceIter,"maxSizeAndSeed"),inVoidData:s(e,this.voidAndClusterReduceIter,"inVoidData")},this.voidAndClusterFullUpdateLoc={inVoidData:s(e,this.voidAndClusterFullUpdate,"inVoidData"),value:s(e,this.voidAndClusterFullUpdate,"value"),textureSizeAndInvSize:s(e,this.voidAndClusterFullUpdate,"textureSizeAndInvSize"),expMultiplier:s(e,this.voidAndClusterFullUpdate,"expMultiplier")},this.voidAndClusterPartialUpdateLoc={inVoidData:s(e,this.voidAndClusterPartialUpdate,"inVoidData"),value:s(e,this.voidAndClusterPartialUpdate,"value"),textureSizeAndInvSize:s(e,this.voidAndClusterPartialUpdate,"textureSizeAndInvSize"),expMultiplier:s(e,this.voidAndClusterPartialUpdate,"expMultiplier"),updateSpan:s(e,this.voidAndClusterPartialUpdate,"updateSpan")},this.visBluenoiseTiledLoc={textureSizeAndInvSize:s(e,this.visBluenoiseTiled,"textureSizeAndInvSize"),noiseEnergy:s(e,this.visBluenoiseTiled,"noiseEnergy")},this.visBluenoiseScaledLoc={textureSizeAndInvSize:s(e,this.visBluenoiseScaled,"textureSizeAndInvSize"),noiseEnergy:s(e,this.visBluenoiseScaled,"noiseEnergy")},this.exportFirstChannelLoc={inTexture:s(e,this.exportFirstChannel,"inTexture")},this.bc4CompressLoc={inTexture:s(e,this.bc4Compress,"inTexture")}}}function ierf(e){let t=Math.log(1-e*e),i=4.330746750799873+.5*t;return Math.sqrt(Math.sqrt(i*i-6.802721088435374*t)-.5*t-4.330746750799873)}class BluenoiseRenderContext{constructor(e,t,i,r,s,n){let u=[i,r,1/i,1/r],a=i*r-1,o=1/a,d=Math.pow(s,-2)*Math.LOG2E;var l=Math.max(i,r);n>0&&n<.99999999?l=Math.round(10.162624164231985*s*n):n<=0&&(l=0);let h=2*l+.01<Math.min(i,r);for(var E=new TextureFramebuffer(e,e.RG32F,e.RG,e.FLOAT,i,r),S=[i+7>>3,r+7>>3],R=[];;){var T,A={fb:new TextureFramebuffer(e,e.RG32F,e.RG,e.FLOAT,S[0],S[1]),dim:[S[0],S[1]]};if(R.push(A),1==S[0]&&1==S[1])break;S[0]=S[0]+7>>3,S[1]=S[1]+7>>3,0==S[0]&&(S[0]=1),0==S[1]&&(S[1]=1)}e.disable(e.BLEND),E.bind(function(){e.useProgram(t.voidAndClusterInit),e.uniform1ui(t.voidAndClusterInitLoc.backgroundEnergySeed,randomSeed()),e.bindVertexArray(t.dummyVao),e.drawArrays(e.TRIANGLES,0,3)}),this.GL=e,this.PSOs=t,this.iteration=0,this.numIterations=a,this.textureSizeAndInvSize=u,this.valueMultiplier=o,this.expMultiplier=d,this.updateSpan=l,this.doPartialUpdate=h,this.noiseEnergyFb=E,this.voidAndClusterData=R}iterate(e){if(this.done())return;let t=this.GL,i=this.PSOs,r=this.doPartialUpdate,s=this.updateSpan,n=this.textureSizeAndInvSize,u=this.valueMultiplier,a=this.expMultiplier;var o=this.noiseEnergyFb,d=this.voidAndClusterData;let l=r?i.voidAndClusterPartialUpdate:i.voidAndClusterFullUpdate,h=r?i.voidAndClusterPartialUpdateLoc:i.voidAndClusterFullUpdateLoc,E=r?24:3;for(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ONE),t.bindVertexArray(this.PSOs.dummyVao),t.disable(t.DEPTH_TEST);!this.done()&&--e>=0;){t.disable(t.BLEND),d[0].fb.bind(function(){t.useProgram(i.voidAndClusterReduceInit),t.uniform3ui(i.voidAndClusterReduceInitLoc.maxSizeAndSeed,o.width,o.height,randomSeed()),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,o.texture),t.uniform1i(i.voidAndClusterReduceInitLoc.noiseEnergyMap,0),t.drawArrays(t.TRIANGLES,0,3)});for(var S=1;S<d.length;++S)d[S].fb.bind(function(){t.useProgram(i.voidAndClusterReduceIter),t.uniform3ui(i.voidAndClusterReduceIterLoc.maxSizeAndSeed,d[S-1].fb.width,d[S-1].fb.height,randomSeed()),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,d[S-1].fb.texture),t.uniform1i(i.voidAndClusterReduceIterLoc.inVoidData,0),t.drawArrays(t.TRIANGLES,0,3)});t.enable(t.BLEND);let R=this.iteration;o.bind(function(){t.useProgram(l),r&&t.uniform1i(h.updateSpan,s),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,d[d.length-1].fb.texture),t.uniform1i(h.inVoidData,0),t.uniform4f(h.textureSizeAndInvSize,n[0],n[1],n[2],n[3]),t.uniform1f(h.value,1-R*u),t.uniform1f(h.expMultiplier,a),t.drawArrays(t.TRIANGLES,0,E)}),this.iteration+=1}t.blendFunc(t.ONE,t.ZERO)}progress(){return this.iteration==this.numIterations?1:this.iteration/this.numIterations}done(){return this.iteration>=this.numIterations}destroy(){this.noiseEnergyFb.destroy();for(var e=0;e<this.voidAndClusterData.length;++e)this.voidAndClusterData[e].fb.destroy()}}class GPUQueryTimer{constructor(e,t){this.GL=e,this.ext=t,this.query=e.createQuery(),this._result=null}capture(e){this._result=null;let t=this.GL,i=this.ext;t.beginQuery(i.TIME_ELAPSED_EXT,this.query),e(),t.endQuery(i.TIME_ELAPSED_EXT)}getResult(){if(null==this._result){let e=this.GL;e.getQueryParameter(this.query,e.QUERY_RESULT_AVAILABLE)&&(this._result=1e-6*e.getQueryParameter(this.query,e.QUERY_RESULT))}return this._result}destroy(){null!=this.query&&(this.GL.deleteQuery(this.query),this.query=null)}}class GPUTimerPool{constructor(e,t){this.GL=e,this.ext=t,this.freeQueries=[],this.waitingQueries=[],this.history=[]}reset(){for(var e=0;e<this.waitingQueries.length;++e)this.freeQueries.push(this.waitingQueries[e].query);this.history=[],this.waitingQueries=[]}destroy(){for(var e=0;e<this.freeQueries.length;++e)this.freeQueries[e].destroy();for(var e=0;e<this.waitingQueries.length;++e)this.waitingQueries[e].query.destroy();this.freeQueries=[],this.waitingQueries=[],this.history=[]}capture(e,t){var i=null;i=0==this.freeQueries.length?new GPUQueryTimer(this.GL,this.ext):this.freeQueries.pop(),this.waitingQueries.push({query:i,numIterations:e}),i.capture(t)}getNumberOfIterations(){for(var e=0;e<this.waitingQueries.length;++e){let t=this.waitingQueries[e].query.getResult();null!=t&&(this.history.push([this.waitingQueries[e].numIterations,t]),this.freeQueries.push(this.waitingQueries[e].query),this.waitingQueries.pop(e))}for(;this.history.length>8;)this.history.pop(0);for(var i=0,r=0,e=0;e<this.history.length;++e)i+=this.history[e][0],r+=this.history[e][1];return 0==i?16:Math.max(1,Math.round(i/r*33))}}class CPUTimerPool{constructor(){this.lastCount=0,this.startTime=null}reset(){this.lastCount=0,this.startTime=null}destroy(){}capture(e,t){this.startTime=Date.now(),this.lastCount=e,t()}getNumberOfIterations(){if(null==this.startTime)return 16;let e=Date.now()-this.startTime;return Math.max(1,e>33.4?this.lastCount-1:this.lastCount+1)}}class BluenoiseGeneratorCanvasContext{constructor(e){let t=e.getContext("webgl2",{alpha:!1,antialias:!1,depth:!1,stencil:!1});if(this.renderContext=null,this.canvas=e,this.GL=t,this.hasFloatRenderTargets=t&&null!=t.getExtension("EXT_color_buffer_float"),this.hasFloatBlending=t&&null!=t.getExtension("EXT_float_blend"),this.gpuQueryExt=t&&t.getExtension("EXT_disjoint_timer_query_webgl2"),this.hasGpuQuery=null!=this.gpuQueryExt,this.webBrowserSupported=t&&this.hasFloatRenderTargets&&this.hasFloatBlending,!this.webBrowserSupported){t?this.noSupportReason="Does not have the required extensions `EXT_color_buffer_float` and `EXT_float_blend`.":this.noSupportReason="Could not create WebGL2 context.";return}this.settings={width:64,height:64,visTiled:1,sigma:1.9,updateAccuracy:.9,pause:!1},this.timerPool=this.hasGpuQuery?new GPUTimerPool(t,this.gpuQueryExt):new CPUTimerPool,this.PSOs=new GraphicsPSOs(t),this.forceRefresh=!1}handleCanvasResize(){let e=this.canvas.width!==this.canvas.clientWidth||this.canvas.height!==this.canvas.clientHeight;return e&&(this.canvas.width=this.canvas.clientWidth,this.canvas.height=this.canvas.clientHeight,this.restoreViewportState()),e}restoreViewportState(){let e=this.GL,t=this.canvas;e.bindFramebuffer(e.FRAMEBUFFER,null),e.drawBuffers([e.BACK]),e.viewport(0,0,t.width,t.height)}newRenderingContext(){null!=this.renderContext&&this.renderContext.destroy(),this.timerPool.reset(),this.renderContext=new BluenoiseRenderContext(this.GL,this.PSOs,this.settings.width,this.settings.height,this.settings.sigma,this.settings.updateAccuracy),this.restoreViewportState()}progress(){return null!=this.renderContext?this.renderContext.progress():0}done(){return null!=this.renderContext&&this.renderContext.done()}activeDimensions(){if(null!=this.renderContext){let e=this.renderContext.textureSizeAndInvSize;return[e[0],e[1]]}return[0,0]}update(){if(null==this.renderContext)return;var e=this.renderContext;let t=!this.settings.pause&&!e.done(),i=this.handleCanvasResize()||t||this.forceRefresh;if(t){let r=this.timerPool.getNumberOfIterations();this.timerPool.capture(r,function(){e.iterate(r)}),this.restoreViewportState()}i&&(this.forceRefresh=!1,this.refreshVisualisation())}refreshVisualisation(){if(null==this.renderContext)return;let e=this.GL,t=this.settings.visTiled,i=this.renderContext.textureSizeAndInvSize;var r=this.renderContext.noiseEnergyFb;let s=t?this.PSOs.visBluenoiseTiled:this.PSOs.visBluenoiseScaled,n=t?this.PSOs.visBluenoiseTiledLoc:this.PSOs.visBluenoiseScaledLoc;e.useProgram(s),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,r.texture),e.uniform1i(n.noiseEnergy,0),e.uniform4f(n.textureSizeAndInvSize,i[0],i[1],i[2],i[3]),e.drawArrays(e.TRIANGLES,0,3)}readBlueNoiseRaw(e){if(null==this.renderContext)return null;let t=this.GL,i=this.PSOs,r=this.activeDimensions();var s=this.renderContext.noiseEnergyFb;let n=r[0],u=r[1];var a=null,o=null;switch(e){case t.UNSIGNED_BYTE:a=t.R8,o=Uint8Array;break;case t.HALF_FLOAT:a=t.R16F,o=Uint16Array;break;case t.FLOAT:a=t.R32F,o=Float32Array;break;default:var d="Unsupported format!";throw console.log(d),alert(d),Error(d)}var l=new TextureFramebuffer(t,a,t.RED,e,n,u);l.bind(function(){t.disable(t.BLEND),t.useProgram(i.exportFirstChannel),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,s.texture),t.uniform1i(i.exportFirstChannelLoc.inTexture,0),t.bindVertexArray(i.dummyVao),t.drawArrays(t.TRIANGLES,0,3)});let h=new o(n*u);return t.bindTexture(t.TEXTURE_2D,l.texture),t.readPixels(0,0,n,u,t.RED,e,h),l.destroy(),this.restoreViewportState(),h}readBlueNoiseBC4(){if(null==this.renderContext)return null;let e=this.GL,t=this.PSOs,i=this.activeDimensions();var r=this.renderContext.noiseEnergyFb;let s=i[0]>>2,n=i[1]>>2;var u=new TextureFramebuffer(e,e.RG32UI,e.RG_INTEGER,e.UNSIGNED_INT,s,n);u.bind(function(){e.disable(e.BLEND),e.useProgram(t.bc4Compress),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,r.texture),e.uniform1i(t.bc4CompressLoc.inTexture,0),e.bindVertexArray(t.dummyVao),e.drawArrays(e.TRIANGLES,0,3)});let a=new Uint32Array(s*n*2);return e.bindTexture(e.TEXTURE_2D,u.texture),e.readPixels(0,0,s,n,e.RG_INTEGER,e.UNSIGNED_INT,a),u.destroy(),this.restoreViewportState(),a}}export function bindBluenoiseContext(e){return void 0==e.bnCtx&&(e.bnCtx=new BluenoiseGeneratorCanvasContext(e)),e.bnCtx}export function onResourcesLoaded(e){return _SHADERS.then(e)}