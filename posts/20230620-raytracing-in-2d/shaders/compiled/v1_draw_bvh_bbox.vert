#version 300 es
uniform highp sampler2D v1LinesBvh;out vec3 vsToFsCol;void main(){int _=gl_VertexID&1;int a=gl_VertexID/2;int b=a/4;int c=b&1;int d=b/2;int e=d*3;vec4 f=texelFetch(v1LinesBvh,ivec2(e,0),0);vec4 g=texelFetch(v1LinesBvh,ivec2((e+1)+c,0),0);float h;if(c==0){h=f.x;}else{h=f.z;}bool i=!(floatBitsToInt(h)==0);vec2 j;if(i){j=vec2(0.);}else{vec2 k;switch(a&3){case 0:{vec2 l;if(_==0){l=g.xy;}else{l=g.zy;}k=l;break;}case 1:{vec2 m;if(_==0){m=g.zy;}else{m=g.zw;}k=m;break;}case 2:{vec2 n;if(_==0){n=g.zw;}else{n=g.xw;}k=n;break;}case 3:{vec2 o;if(_==0){o=g.xw;}else{o=g.xy;}k=o;break;}default:{k=vec2(0.);break;}}j=k;}uint p=uint((d*2)+c)*123u;uint q=((p^61u)^(p>>16u))*9u;uint r=(q^(q>>4u))*668265261u;float s=float((r^(r>>15u))&65535u)*9.155413e-05;vec3 t=clamp(vec3(abs(s-3.)-1.,2.-abs(s-2.),2.-abs(s-4.)),vec3(0.),vec3(1.));vec3 u;if(i){u=t*2.;}else{u=t;}vsToFsCol=u;gl_Position=vec4((j*2.)-vec2(1.),0.,1.);}